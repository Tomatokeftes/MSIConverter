# .github/workflows/release.yml

name: Create Release

# This action will trigger on every push to the 'main' branch
# This typically happens when you merge a Pull Request
on:
  push:
    branches:
      - main

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for creating releases
      pull-requests: write  # Required for creating PRs (if needed)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # We need to fetch all history and tags for semantic-release
          fetch-depth: 0
          # Use PAT for authenticated git operations
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # Or your desired Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install python-semantic-release poetry

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create Release
        # This command does all the magic:
        # 1. Reads commit history since the last tag.
        # 2. Determines the new version (PATCH, MINOR, or MAJOR).
        # 3. Creates a new Git tag with the version number.
        # 4. Updates your __init__.py file with the new version.
        # 5. Generates a CHANGELOG.md from your commit messages.
        # 6. Creates a GitHub Release with the tag and changelog.
        # 7. Commits the changed files (like pyproject.toml and CHANGELOG.md) back to your repo.
        run: semantic-release version --no-push
        env:
          # This token is automatically provided by GitHub.
          # It's needed to create releases and commit back to the repo.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push changes
        run: |
          git push origin main --follow-tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
