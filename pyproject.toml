
[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "msiconvert"
# The version is now dynamic and will be read from msiconvert/__init__.py
# This is required for setuptools to work with the version file.
dynamic = ["version"]
description = "A library to convert MSI data into different formats"
readme = "README.md"
authors = [
    {name = "Theodoros Visvikis", email = "t.visvikis@maastrichtuniversity.nl"}
]
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    "anndata>=0.9.0",
    "dask>=2023.0.0",
    "geopandas>=0.9.0",
    "lxml>=4.6.0",
    "numpy>=1.20.0",
    "pandas>=1.3.0",
    "pyimzML>=1.4.0",
    "scipy>=1.7.0",
    "Shapely>=1.8.0",
    "spatialdata>=0.0.2",
    "tqdm>=4.50.0",
    "zarr>=2.10.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "mock>=4.0.0",
]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    # Add semantic-release here for local development and testing
    "python-semantic-release", 
]

[project.scripts]
msiconvert = "msiconvert.__main__:main"

# This section tells setuptools where to find the dynamic version number
[tool.setuptools.dynamic]
version = {attr = "msiconvert.__version__"}

# This section replaces the old [tool.setuptools] section
[tool.setuptools]
packages = ["msiconvert"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "unit: marks tests as unit tests (fast, no external dependencies)",
    "integration: marks tests as integration tests (may be slow, may require external dependencies)"
]
addopts = "-v --tb=short -m \"not integration\""
filterwarnings = [
    "ignore::DeprecationWarning:pkg_resources.*:",
    "ignore::DeprecationWarning:xarray_schema.*:",
    "ignore::UserWarning:spatialdata.models.models:1053"
]

# =============================================================
# === THIS IS THE NEW SECTION FOR AUTOMATED VERSIONING      ===
# =============================================================
[tool.semantic_release]
# Tells semantic-release to look for the version in a file
version_source = "file"

# Specifies the exact file and variable for the version
version_variable = "msiconvert/__init__.py:__version__"

# The branch that will trigger a release when code is merged
branch = "main"

# The command to build your package before publishing.
# This is a robust, modern command for setuptools-based projects.
build_command = "python -m pip install build && python -m build"